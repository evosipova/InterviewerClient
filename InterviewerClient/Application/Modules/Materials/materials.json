{
  "materials": [
    {
      "id": 1,
      "title": "Основы Swift",
      "subtitle": "Изучение базовых концепций языка Swift",
      "isLiked": false,
      "level": "junior",
      "content": "Swift — это мощный и интуитивно понятный язык программирования для разработки приложений под iOS. Основные принципы: типобезопасность, управление памятью, удобочитаемость кода."
    },
    {
      "id": 2,
      "title": "Архитектуры в iOS",
      "subtitle": "MVVM, MVC, VIPER: разбор архитектурных паттернов",
      "isLiked": true,
      "level": "midle",
      "content": "В iOS разработке популярны архитектуры MVC, MVVM, VIPER. Каждая из них решает свои задачи и имеет плюсы и минусы. Например, MVVM отделяет логику от представления, что делает код более читаемым."
    },
    {
      "id": 3,
      "title": "Асинхронность в Swift",
      "subtitle": "Concurrency, GCD, async/await",
      "isLiked": false,
      "level": "senior",
      "content": "Асинхронное программирование позволяет выполнять операции в фоне. В Swift используются GCD (Grand Central Dispatch) и `async/await` для работы с асинхронными задачами."
    },
    {
      "id": 4,
      "title": "Работа с API",
      "subtitle": "Основы работы с REST API и JSON",
      "isLiked": false,
      "level": "junior",
      "content": "REST API — это стиль архитектуры, используемый для взаимодействия между клиентом и сервером. Swift использует `URLSession` для работы с HTTP-запросами и парсинга JSON."
    },
    {
      "id": 5,
      "title": "Оптимизация производительности",
      "subtitle": "Методы оптимизации приложений",
      "isLiked": false,
      "level": "midle",
      "content": "Оптимизация включает уменьшение количества запросов, эффективную работу с памятью, кэширование данных и профилирование производительности через инструменты Xcode."
    }
  ]
}
